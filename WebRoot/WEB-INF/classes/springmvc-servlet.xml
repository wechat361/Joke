<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"     
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:p="http://www.springframework.org/schema/p"     
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:mvc="http://www.springframework.org/schema/mvc"   
   	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
   				http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
       			http://www.springframework.org/schema/aop 
       			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
       			http://www.springframework.org/schema/mvc  
    			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       			http://www.springframework.org/schema/tx 
       			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
       			http://www.springframework.org/schema/context 
       			http://www.springframework.org/schema/context/spring-context-3.0.xsd">
       		
    <mvc:annotation-driven /> 
    <!-- 自动扫描包 -->
    <context:component-scan base-package="com.ctlovedove.joke"/> 
    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/> 
      
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->  
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="/WEB-INF/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>  
    
    <!-- 文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

	<!-- spring quarts  start -->
   <!-- 要调用的工作类 -->
   <bean id="catchJokeInfoQuartz" class="com.ctlovedove.joke.quartz.CatchJokeInfoQuartz" >
   		<!-- <property name="jokeInfoService">
   			<bean class="com.ctlovedove.joke.service.impl.JokeInfoServiceImpl"></bean>
   		</property> -->
   </bean>
   
   <!-- 使用MethodInvokingJobDetailFactoryBean，任务类可以不实现Job接口，通过targetMethod指定调用方法-->
   <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
   		<!--false表示等上一个任务执行完后再开启新的任务-->
   		<property name="concurrent" value="false"></property>
   		<!-- 调用的类 -->
   		<property name="targetObject" ref="catchJokeInfoQuartz" />
   		<!-- <property name="targetObject">
   			<bean class="com.ctlovedove.joke.quartz.CatchJokeInfoQuartz"></bean>
   		</property> -->
   		<!-- 类中的方法 -->
   		<property name="targetMethod" value="run" />
   </bean>
   
   <!-- 定义触发触发器 -->
   <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
   		<property name="jobDetail" ref="jobDetail"></property>
   		<!-- 每1分钟执行一次 -->
   		<property name="cronExpression" value="0 0 20 * * ? "></property>
   </bean>
   
    <!-- 调度工厂 如果将lazy-init='false'那么容器启动就会执行调度程序  -->
   <bean id="scheduler" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
   		<property name="triggers" ref="cronTrigger"></property>
   </bean>
    <!-- spring quarts  end -->   
    
</beans>